Deployments:
  - name: redis
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: redis
        image: "bitnami/redis:7.0.8"
        env:
          - name: REDIS_DISABLE_COMMANDS
            value: FLUSHDB,FLUSHALL
          - name: REDIS_PASSWORD
            value: ca871bee997a80289fcaddd948717365
        livenessProbe:
          exec:
            command:
              - redis-cli
              - ping
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
        volumeMounts:
          - name: redis-claim0
            mountPath: /bitnami/redis/data
    volumes:
      - name: redis-claim0
        persistentVolumeClaim:
          claimName: redis-claim0 # Make sure you use the same claim name as in the PersistentVolumeClaim section below
  - name: clickhouse
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: clickhouse
        image: "clickhouse/clickhouse-server:23.1-alpine"
        env:
          - name: CLICKHOUSE_PASSWORD
            value: 5d7da7ae500eb91bd394c89f4e35be19
          - name: CLICKHOUSE_USER
            value: clickhouse
        livenessProbe:
          exec:
            command:
              - wget
              - --spider
              - -q
              - localhost:8123/ping
          failureThreshold: 6
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        volumeMounts:
          - name: clickhouse-claim0
            mountPath: /var/lib/clickhouse
    volumes:
      - name: clickhouse-claim0
        persistentVolumeClaim:
          claimName: clickhouse-claim0
  - name: zookeeper
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: zookeeper
        image: "confluentinc/cp-zookeeper:7.3.1"
        env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          - name: ZOOKEEPER_TICK_TIME
            value: "2000"
        volumeMounts:
          - name: zookeeper-claim0
            mountPath: /var/lib/zookeeper/data
    volumes:
      - name: zookeeper-claim0
        persistentVolumeClaim:
          claimName: zookeeper-claim0
  - name: broker
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: broker
        image: "confluentinc/cp-kafka:7.3.1"
        env:
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
          - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
            value: "true"
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
            value: "0"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        livenessProbe:
          exec:
            command:
              - cub
              - kafka-ready
              - "1"
              - "5"
              - -b
              - 127.0.0.1:9092
              - -c
              - /etc/kafka/kafka.properties
          failureThreshold: 6
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 10
        volumeMounts:
          - name: broker-claim0
            mountPath: /var/lib/kafka/data
    volumes:
      - name: broker-claim0
        persistentVolumeClaim:
          claimName: broker-claim0
  - name: db
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: db
        image: "postgres:13.4"
        env:
          - name: PGDATA
            value: /var/lib/postgresql/data
          - name: POSTGRES_DB
            value: registry
          - name: POSTGRES_PASSWORD
            value: 4370153fbf43d40c1f9ea610e1913782
          - name: POSTGRES_USER
            value: postgres
        # livenessProbe:
        #   exec:
        #     command:
        #       - pg_isready -d registry -U postgres
        #   failureThreshold: 6
        #   periodSeconds: 5
        #   timeoutSeconds: 5
        volumeMounts:
          - name: db-claim0
            mountPath: /var/lib/postgresql/data
    volumes:
      - name: db-claim0
        persistentVolumeClaim:
          claimName: db-claim0
  - name: emails
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: emails
        image: "ghcr.io/kamilkisiela/graphql-hive/emails:latest"
        env:
          - name: EMAIL_FROM
            value: no-reply@graphql-hive.com
          - name: EMAIL_PROVIDER
            value: sendmail
          - name: NODE_ENV
            value: production
          - name: PORT
            value: "3011"
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PASSWORD
            value: ca871bee997a80289fcaddd948717365
          - name: REDIS_PORT
            value: "6379"
  - name: supertokens
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: supertokens
        image: "registry.supertokens.io/supertokens/supertokens-postgresql:4.3"
        env:
          - name: "ACCESS_TOKEN_BLACKLISTING"
            value: "true"
          - name: "API_KEYS"
            value: cc42faf32cd1fd098c19cabf2e57e384
          - name: "POSTGRESQL_DATABASE_NAME"
            value: registry
          - name: "POSTGRESQL_HOST"
            value: db
          - name: "POSTGRESQL_PASSWORD"
            value: 4370153fbf43d40c1f9ea610e1913782
          - name: "POSTGRESQL_PORT"
            value: "5432"
          - name: "POSTGRESQL_TABLE_SCHEMA"
            value: supertokens
          - name: "POSTGRESQL_USER"
            value: postgres
          - name: "SUPERTOKENS_PORT"
            value: "3567"
  - name: tokens
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: tokens
        image: "ghcr.io/kamilkisiela/graphql-hive/tokens:latest"
        env:
          - name: NODE_ENV
            value: production
          - name: PORT
            value: "3003"
          - name: POSTGRES_DB
            value: registry
          - name: POSTGRES_HOST
            value: db
          - name: POSTGRES_PASSWORD
            value: 4370153fbf43d40c1f9ea610e1913782
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_USER
            value: postgres
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PASSWORD
            value: ca871bee997a80289fcaddd948717365
          - name: REDIS_PORT
            value: "6379"
  - name: webhooks
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: webhooks
        image: "ghcr.io/kamilkisiela/graphql-hive/webhooks:latest"
        env:
          - name: NODE_ENV
            value: production
          - name: PORT
            value: "3005"
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PASSWORD
            value: ca871bee997a80289fcaddd948717365
          - name: REDIS_PORT
            value: "6379"
  - name: usage
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: usage
        image: "ghcr.io/kamilkisiela/graphql-hive/usage:latest"
        ports:
          - containerPort: 3006
        env:
          - name: KAFKA_BROKER
            value: broker:29092
          - name: KAFKA_BUFFER_DYNAMIC
            value: "1"
          - name: KAFKA_BUFFER_INTERVAL
            value: "1000"
          - name: KAFKA_BUFFER_SIZE
            value: "350"
          - name: KAFKA_CONNECTION_MODE
            value: docker
          - name: KAFKA_TOPIC
            value: usage_reports_v2
          - name: NODE_ENV
            value: production
          - name: PORT
            value: "3006"
          - name: TOKENS_ENDPOINT
            value: http://tokens:3003
  - name: usage-ingestor
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: usage-ingestor
        image: "ghcr.io/kamilkisiela/graphql-hive/usage-ingestor:latest"
        env:
          - name: CLICKHOUSE_HOST
            value: clickhouse
          - name: CLICKHOUSE_PASSWORD
            value: 5d7da7ae500eb91bd394c89f4e35be19
          - name: CLICKHOUSE_PORT
            value: "8123"
          - name: CLICKHOUSE_PROTOCOL
            value: http
          - name: CLICKHOUSE_USERNAME
            value: clickhouse
          - name: KAFKA_BROKER
            value: broker:29092
          - name: KAFKA_CONCURRENCY
            value: "1"
          - name: KAFKA_CONNECTION_MODE
            value: docker
          - name: KAFKA_CONSUMER_GROUP
            value: usage-ingestor-v2
          - name: KAFKA_TOPIC
            value: usage_reports_v2
          - name: NODE_ENV
            value: production
          - name: PORT
            value: "3007"
  - name: schema
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: schema
        image: "ghcr.io/kamilkisiela/graphql-hive/schema:latest"
        env:
          - name: ENCRYPTION_SECRET
            value: fbfb73539b5711462f8dc93b08be8f83
          - name: NODE_ENV
            value: production
          - name: PORT
            value: "3002"
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PASSWORD
            value: ca871bee997a80289fcaddd948717365
          - name: REDIS_PORT
            value: "6379"
  - name: s3
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: s3
        image: "quay.io/minio/minio:RELEASE.2022-11-29T23-40-49Z"
        args:
          - server
          - /data
          - --console-address
          - :9001
        ports:
          - containerPort: 9000
          - containerPort: 9001
        env:
          - name: MINIO_ROOT_PASSWORD
            value: minioadmin
          - name: MINIO_ROOT_USER
            value: minioadmin
        livenessProbe:
          exec:
            command:
              - curl
              - -f
              - http://localhost:9000/minio/health/live
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 20
        volumeMounts:
          - name: s3-claim0
            mountPath: /data
    volumes:
      - name: s3-claim0
        persistentVolumeClaim:
          claimName: s3-claim0
  - name: s3-reverse-proxy
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: s3-reverse-proxy
        image: "caddy:2.6.4-alpine"
        args:
          - caddy
          - reverse-proxy
          - --from
          - :8083
          - --to
          - s3:9000
          - --change-host-header
        ports:
          - containerPort: 8083
  - name: server
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: server
        image: "ghcr.io/kamilkisiela/graphql-hive/server:latest"
        ports:
          - containerPort: 3001
        env:
          - name: AUTH_ORGANIZATION_OIDC
            value: "1"
          - name: CDN_API
            value: "1"
          - name: CDN_API_BASE_URL
            value: http://localhost:8082
          - name: CDN_AUTH_PRIVATE_KEY
            value: b2f380083af6d1052c7c9dc36aab90ea
          - name: CLICKHOUSE_HOST
            value: clickhouse
          - name: CLICKHOUSE_PASSWORD
            value: 5d7da7ae500eb91bd394c89f4e35be19
          - name: CLICKHOUSE_PORT
            value: "8123"
          - name: CLICKHOUSE_PROTOCOL
            value: http
          - name: CLICKHOUSE_USERNAME
            value: clickhouse
          - name: EMAILS_ENDPOINT
            value: http://emails:3011
          - name: ENCRYPTION_SECRET
            value: fbfb73539b5711462f8dc93b08be8f83
          - name: NODE_ENV
            value: production
          - name: PORT
            value: "3001"
          - name: POSTGRES_DB
            value: registry
          - name: POSTGRES_HOST
            value: db
          - name: POSTGRES_PASSWORD
            value: 4370153fbf43d40c1f9ea610e1913782
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_USER
            value: postgres
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PASSWORD
            value: ca871bee997a80289fcaddd948717365
          - name: REDIS_PORT
            value: "6379"
          - name: S3_ACCESS_KEY_ID
            value: minioadmin
          - name: S3_BUCKET_NAME
            value: artifacts
          - name: S3_ENDPOINT
            value: http://s3:9000
          - name: S3_PUBLIC_URL
            value: http://localhost:8083
          - name: S3_SECRET_ACCESS_KEY
            value: minioadmin
          - name: SCHEMA_ENDPOINT
            value: http://schema:3002
          - name: SUPERTOKENS_API_KEY
            value: cc42faf32cd1fd098c19cabf2e57e384
          - name: SUPERTOKENS_CONNECTION_URI
            value: http://supertokens:3567
          - name: TOKENS_ENDPOINT
            value: http://tokens:3003
          - name: WEBHOOKS_ENDPOINT
            value: http://webhooks:3005
          - name: WEB_APP_URL
            value: http://localhost:30001
  - name: app
    replicaCount: 1
    restartPolicy: Always
    containers:
      - name: app
        image: "ghcr.io/kamilkisiela/graphql-hive/app:latest"
        ports:
          - containerPort: 3000
        env:
          - name: APP_BASE_URL
            value: http://localhost:30001
          - name: AUTH_ORGANIZATION_OIDC
            value: "1"
          - name: AUTH_REQUIRE_EMAIL_VERIFICATION
            value: "0"
          - name: EMAILS_ENDPOINT
            value: http://emails:3011
          - name: GRAPHQL_ENDPOINT
            value: http://server:3001/graphql
          - name: NODE_ENV
            value: production
          - name: PORT
            value: "3000"
          - name: SERVER_ENDPOINT
            value: http://server:3001
          - name: SUPERTOKENS_API_KEY
            value: cc42faf32cd1fd098c19cabf2e57e384
          - name: SUPERTOKENS_CONNECTION_URI
            value: http://supertokens:3567
        

PersistentVolumeClaims:
  - name: redis-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  - name: clickhouse-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  - name: zookeeper-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  - name: broker-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  - name: db-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  - name: s3-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi

Services:
  - name: redis
    appSelector: redis
    type: ClusterIP
    ports:
      - name: redis
        port: 6379
        targetPort: 6379
        protocol: TCP
  - name: clickhouse
    appSelector: clickhouse
    type: ClusterIP
    ports:
      - name: clickhouse
        port: 8123
        targetPort: 8123
        protocol: TCP
  - name: zookeeper
    appSelector: zookeeper
    type: ClusterIP
    ports:
      - name: zookeeper
        port: 2181
        targetPort: 2181
        protocol: TCP
  - name: broker
    appSelector: broker
    type: ClusterIP
    ports:
      - name: broker
        port: 9092
        targetPort: 9092
        protocol: TCP
      - name: broker-29092
        port: 29092
        targetPort: 29092
        protocol: TCP
  - name: db
    appSelector: db
    type: ClusterIP
    ports:
      - name: db
        port: 5432
        targetPort: 5432
        protocol: TCP
  - name: emails
    appSelector: emails
    type: ClusterIP
    ports:
      - name: emails
        port: 3011
        targetPort: 3011
        protocol: TCP
  - name: supertokens
    appSelector: supertokens
    type: ClusterIP
    ports:
      - name: supertokens
        port: 3567
        targetPort: 3567
        protocol: TCP
  - name: tokens
    appSelector: tokens
    type: ClusterIP
    ports:
      - name: tokens
        port: 3003
        targetPort: 3003
        protocol: TCP
  - name: webhooks
    appSelector: webhooks
    type: ClusterIP
    ports:
      - name: webhooks
        port: 3005
        targetPort: 3005
        protocol: TCP
  - name: usage
    appSelector: usage
    type: ClusterIP
    ports:
      - name: usage
        port: 8081
        targetPort: 3006
        protocol: TCP
  - name: schema
    appSelector: schema
    type: ClusterIP
    ports:
      - name: schema
        port: 3002
        targetPort: 3002
        protocol: TCP
  - name: s3
    appSelector: s3
    type: ClusterIP
    ports:
      - name: s3
        port: 9000
        targetPort: 9000
        protocol: TCP
      - name: s3-console
        port: 9001
        targetPort: 9001
        protocol: TCP
  - name: s3-reverse-proxy
    appSelector: s3-reverse-proxy
    type: ClusterIP
    ports:
      - name: s3-reverse-proxy
        port: 8083
        targetPort: 8083
        protocol: TCP
  - name: server
    appSelector: server
    type: ClusterIP
    ports:
      - name: server
        port: 3001
        targetPort: 3001
        protocol: TCP
  - name: app
    appSelector: app
    type: NodePort
    ports:
      - name: app
        port: 8080
        nodePort: 30001
        targetPort: 3000
        protocol: TCP

Jobs:
  - name: migrations
    restartPolicy: OnFailure
    containers:
      - name: migrations
        image: "ghcr.io/kamilkisiela/graphql-hive/storage:latest"
        env:
          - name: CLICKHOUSE_HOST
            value: clickhouse
          - name: CLICKHOUSE_MIGRATOR
            value: up
          - name: CLICKHOUSE_PASSWORD
            value: 5d7da7ae500eb91bd394c89f4e35be19
          - name: CLICKHOUSE_PORT
            value: "8123"
          - name: CLICKHOUSE_PROTOCOL
            value: http
          - name: CLICKHOUSE_USERNAME
            value: clickhouse
          - name: MIGRATOR
            value: up
          - name: POSTGRES_DB
            value: registry
          - name: POSTGRES_HOST
            value: db
          - name: POSTGRES_PASSWORD
            value: 4370153fbf43d40c1f9ea610e1913782
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_USER
            value: postgres
          - name: TS_NODE_TRANSPILE_ONLY
            value: "true"
        volumeMounts:
          - name: db-claim0
            mountPath: /var/lib/postgresql/data
    volumes:
      - name: db-claim0
        persistentVolumeClaim:
          claimName: db-claim0
  - name: s3-provision-buckets
    restartPolicy: OnFailure
    containers:
      - name: s3-provision-buckets
        image: "quay.io/minio/mc:RELEASE.2022-11-17T21-20-39Z"
        commands: ['"/bin/sh"']
        args:
          - '- -c'
          - '- >-'
          - ' /usr/bin/mc alias set myminio http://s3:9000 minioadmin minioadmin; /usr/bin/mc ls myminio/artifacts >/dev/null 2>&1 || /usr/bin/mc mb myminio/artifacts; exit 0'
