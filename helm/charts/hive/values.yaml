Deployments:
  - name: redis
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: redis
        image: "bitnami/redis:7.0.8"
        env:
          - name: REDIS_DISABLE_COMMANDS
            value: FLUSHDB,FLUSHALL
          - name: REDIS_PASSWORD
            value: ca871bee997a80289fcaddd948717365
        livenessProbe:
          exec:
            command:
              - redis-cli
              - ping
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
        volumeMounts:
          - name: redis-claim0
            mountPath: /bitnami/redis/data
    volumes:
      - name: redis-claim0
        persistentVolumeClaim:
          claimName: redis-claim0 # Make sure you use the same claim name as in the PersistentVolumeClaim section below
  - name: clickhouse
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: clickhouse
        image: "clickhouse/clickhouse-server:23.1-alpine"
        env:
          - name: CLICKHOUSE_PASSWORD
            value: 5d7da7ae500eb91bd394c89f4e35be19
          - name: CLICKHOUSE_USER
            value: clickhouse
        livenessProbe:
          exec:
            command:
              - wget
              - --spider
              - -q
              - localhost:8123/ping
          failureThreshold: 6
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        volumeMounts:
          - name: clickhouse-claim0
            mountPath: /var/lib/clickhouse
    volumes:
      - name: clickhouse-claim0
        persistentVolumeClaim:
          claimName: clickhouse-claim0
  - name: zookeeper
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: zookeeper
        image: "confluentinc/cp-zookeeper:7.3.1"
        env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          - name: ZOOKEEPER_TICK_TIME
            value: "2000"
        volumeMounts:
          - name: zookeeper-claim0
            mountPath: /var/lib/zookeeper/data
    volumes:
      - name: zookeeper-claim0
        persistentVolumeClaim:
          claimName: zookeeper-claim0
  - name: broker
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: broker
        image: "confluentinc/cp-kafka:7.3.1"
        env:
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
          - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
            value: "true"
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
            value: "0"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        livenessProbe:
          exec:
            command:
              - cub
              - kafka-ready
              - "1"
              - "5"
              - -b
              - 127.0.0.1:9092
              - -c
              - /etc/kafka/kafka.properties
          failureThreshold: 6
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 10
        volumeMounts:
          - name: broker-claim0
            mountPath: /var/lib/kafka/data
    volumes:
      - name: broker-claim0
        persistentVolumeClaim:
          claimName: broker-claim0
  - name: db
    replicaCount: 1
    strategy:
      type: Recreate
    restartPolicy: Always
    containers:
      - name: db
        image: "postgres:13.4"
        env:
          - name: PGDATA
            value: /var/lib/postgresql/data
          - name: POSTGRES_DB
            value: registry
          - name: POSTGRES_PASSWORD
            value: 5d7da7ae500eb91bd394c89f4e35be19
          - name: POSTGRES_USER
            value: postgres
        livenessProbe:
          exec:
            command:
              - pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
          failureThreshold: 6
          periodSeconds: 5
          timeoutSeconds: 5
        volumeMounts:
          - name: db-claim0
            mountPath: /var/lib/postgresql/data
    volumes:
      - name: db-claim0
        persistentVolumeClaim:
          claimName: db-claim0

PersistentVolumeClaims:
  - name: redis-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  - name: clickhouse-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  - name: zookeeper-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  - name: broker-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  - name: db-claim0
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
